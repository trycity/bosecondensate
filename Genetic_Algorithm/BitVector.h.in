// BitVector.h

/*
BitVector header file
*/

#ifndef _BITVECTOR_H
#define _BITVECTOR_H



static const unsigned char _BV_BITS[8] = {1, 2, 4, 8, 16, 32, 64, 128};

namespace QMC{
	class BitVector
	{
	public:
		BitVector();
		BitVector(int nbits);
		BitVector(const BitVector&);
		~BitVector();

		void SetBit(int bit, int val=1);
		int GetBit(int bit) const;
		void ToggleBit(int bit);
		void SetLength(int nbits);

		BitVector operator&(const BitVector&) const;
		BitVector& operator&=(const BitVector&);
		BitVector operator | (const BitVector&) const;
		BitVector& operator |=(const BitVector&);
		BitVector operator ^(const BitVector&) const;
		BitVector& operator ^=(const BitVector&);
		friend BitVector operator ~(const BitVector&);
		BitVector& operator = (const BitVector&);
		int operator[](int bit) const;

		//accessor methods
		int getLen() const;
		//unsigned char* getBitVec();

	//private:	
		// These should be made private.
		int m_Len;
		unsigned char* m_BitVec;
		//static const unsigned char _BV_BITS[8] = {1, 2, 4, 8, 16, 32, 64, 128};
	};
};

#endif
