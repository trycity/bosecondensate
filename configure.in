## configuration file

AC_INIT([QMC], 0.1)



AC_ARG_WITH([EXT],
	AC_HELP_STRING([--with-EXT=DIR],
	[directory containing external QMC libraries]),
[
	case "$with_EXT" in
	     yes|no|'')
	     AC_MSG_RESULT([failed.])
	     AC_MSG_ERROR([--with-EXT requires an argument])
	     ;;
	     *)
	     with_EXT_src="command line"
	     ;;
	esac
],[
        if test "x$with_EXT" == "x"; then
           with_EXT="`pwd`/../QMC_EXT"
           with_EXT_src="`pwd`/../QMC_EXT"
           AC_MSG_RESULT([Using default directory for EXT: $with_EXT])
        fi
])

AC_SUBST([EXT], [$with_EXT])


## set build directory
BUILD_DIR=`pwd`
AC_SUBST([BUILD_DIR], [$BUILD_DIR])
## Source files
AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([Makefile.common])
AC_CONFIG_FILES([runConfigTest.sh],	[chmod a+x runConfigTest.sh])
AC_CONFIG_FILES([Configurations/Makefile])
AC_CONFIG_FILES([Configurations/VMCconfig.cpp])
AC_CONFIG_FILES([Configurations/VMCconfig.h])
AC_CONFIG_FILES([Configurations/JastrowConfig.h])
AC_CONFIG_FILES([Configurations/Test/JastrowConfig_Test.cpp])
AC_CONFIG_FILES([Configurations/Test/Makefile])
AC_CONFIG_FILES([Energy_Terms/Makefile])
AC_CONFIG_FILES([Energy_Terms/SymHoLocalE.cpp])
AC_CONFIG_FILES([Energy_Terms/SymHoLocalE.h])
AC_CONFIG_FILES([Energy_Terms/SymHoLocalESqd.cpp])
AC_CONFIG_FILES([Energy_Terms/SymHoLocalESqd.h])
##AC_CONFIG_FILES([Energy_Terms/Test/Makefile])
##AC_CONFIG_FILES([Energy_Terms/Test/Energy_test.cpp])
AC_CONFIG_FILES([Genetic_Algorithm/Makefile])
AC_CONFIG_FILES([Genetic_Algorithm/BitVector.cpp])
AC_CONFIG_FILES([Genetic_Algorithm/BitVector.h])
AC_CONFIG_FILES([Genetic_Algorithm/GeneticAlg.cpp])
AC_CONFIG_FILES([Genetic_Algorithm/GeneticAlg.h])
AC_CONFIG_FILES([Utilities/Makefile])
##AC_CONFIG_FILES([Utilities/install_xerces.sh],	[chmod a+x Utilities/install_xerces.sh])
AC_CONFIG_FILES([Utilities/rand.cpp])
AC_CONFIG_FILES([Utilities/rand.h])
AC_CONFIG_FILES([Utilities/StringUtilities.h])
AC_CONFIG_FILES([Utilities/VMCPoint.h])
AC_CONFIG_FILES([Metropolis_Walker/VMCMetropolisWalker.h])
AC_CONFIG_FILES([Metropolis_Walker/Test/Makefile])
AC_CONFIG_FILES([Metropolis_Walker/Test/walker_test.cpp])
AC_CONFIG_FILES([Parser/HandlerIndex.h])
AC_CONFIG_FILES([Parser/TParser.cpp])
AC_CONFIG_FILES([Parser/TParser.h])
AC_CONFIG_FILES([Parser/TConfigParser.cpp])
AC_CONFIG_FILES([Parser/TConfigParser.h])
AC_CONFIG_FILES([Parser/Makefile])
AC_CONFIG_FILES([Wavefunctions/Makefile])
AC_CONFIG_FILES([Wavefunctions/EffectiveRangeF.cpp])
AC_CONFIG_FILES([Wavefunctions/EffectiveRangeF.h])
AC_CONFIG_FILES([Wavefunctions/HardSphereF.cpp])
AC_CONFIG_FILES([Wavefunctions/HardSphereF.h])
AC_CONFIG_FILES([Wavefunctions/HomogeneousPhi.cpp])
AC_CONFIG_FILES([Wavefunctions/HomogeneousPhi.h])
AC_CONFIG_FILES([Wavefunctions/NonInteractingF.cpp])
AC_CONFIG_FILES([Wavefunctions/NonInteractingF.h])
AC_CONFIG_FILES([Wavefunctions/Phi.cpp])
AC_CONFIG_FILES([Wavefunctions/Phi.h])
AC_CONFIG_FILES([Wavefunctions/SymHoPhi.cpp])
AC_CONFIG_FILES([Wavefunctions/SymHoPhi.h])
AC_CONFIG_FILES([Wavefunctions/TIntF.cpp])
AC_CONFIG_FILES([Wavefunctions/TIntF.h])
AC_CONFIG_FILES([Wavefunctions/Test/Makefile])
AC_CONFIG_FILES([Wavefunctions/Test/HomogeneousPhi_test.cpp])
AC_CONFIG_FILES([Wavefunctions/Test/SymHoPhi_test.cpp])
AC_CONFIG_FILES([Wavefunctions/Test/EffectiveRangeF_test.cpp])
AC_CONFIG_FILES([Wavefunctions/Test/NonInteractingF_test.cpp])
AC_CONFIG_FILES([Wavefunctions/Test/HardSphereF_test.cpp])

AC_OUTPUT
