// SymHoPhi_test.cpp

#include <iostream>

#include "Wavefunctions/SymHoPhi.h"


using namespace QMC;
using namespace std;

int main()
{
	double alpha = 0.5;	
	
	SymHoPhi testPhi1(alpha);
	
	SymHoPhi* testPhi2 = new SymHoPhi(3.0*alpha);
	
	SymHoPhi& reftestPhi3 = testPhi1;
	
	VMCPoint point(1);
	point[0] = 1.0*alpha;
	double x = testPhi1(point);
	
	::std::cout<<::std::endl;
	::std::cout<<"SymHoPhi Test program: "<<::std::endl;
	::std::cout<<"-----------------------"<<::std::endl<<::std::endl;
	::std::cout<<"m_Alpha(Stack) = "<<testPhi1.getAlpha()<<::std::endl;
	::std::cout<<"m_Alpha(Heap/pointer) = "<<testPhi2->getAlpha()<<::std::endl;
	::std::cout<<"m_Alpha(reference) = "<<reftestPhi3.getAlpha()<<::std::endl;
	
	::std::cout<<"overloaded operator():"<<::std::endl;
	::std::cout<<"With VMCPoint& x = "<<1.0*alpha<<::std::endl;
	::std::cout<<"operator return value = "<<x<<::std::endl;
	return 0;
}
